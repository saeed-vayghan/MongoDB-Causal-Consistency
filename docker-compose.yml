services:
  mongo1:
    image: mongo:latest
    container_name: mongo1
    restart: unless-stopped
    hostname: mongo1
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all", "--auth", "--keyFile", "/etc/secrets/mongo-keyfile"]
    volumes:
      - mongo-data1:/data/db
      - ./mongo-keyfile:/etc/secrets/mongo-keyfile:ro
    healthcheck:
      test: ["CMD-SHELL", "echo 'db.runCommand(\"ping\").ok' | mongosh localhost:27017/admin -u root -p example --quiet"]
      interval: 10s
      timeout: 10s
      retries: 5

  mongo2:
    image: mongo:latest
    container_name: mongo2
    restart: unless-stopped
    hostname: mongo2
    ports:
      - "27018:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all", "--auth", "--keyFile", "/etc/secrets/mongo-keyfile"]
    volumes:
      - mongo-data2:/data/db
      - ./mongo-keyfile:/etc/secrets/mongo-keyfile:ro
    healthcheck:
      test: ["CMD-SHELL", "echo 'db.runCommand(\"ping\").ok' | mongosh localhost:27017/admin -u root -p example --quiet"]
      interval: 10s
      timeout: 10s
      retries: 5

  mongo3:
    image: mongo:latest
    container_name: mongo3
    restart: unless-stopped
    hostname: mongo3
    ports:
      - "27019:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all", "--auth", "--keyFile", "/etc/secrets/mongo-keyfile"]
    volumes:
      - mongo-data3:/data/db
      - ./mongo-keyfile:/etc/secrets/mongo-keyfile:ro
    healthcheck:
      test: ["CMD-SHELL", "echo 'db.runCommand(\"ping\").ok' | mongosh localhost:27017/admin -u root -p example --quiet"]
      interval: 10s
      timeout: 10s
      retries: 5

  mongo-init-replica:
    image: mongo:latest
    container_name: mongo-init-replica
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    entrypoint: ["sh", "-c", "bash /docker-entrypoint-initdb.d/mongo-init.sh"]
    volumes:
      - ./mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    depends_on:
      - mongo1
      - mongo2
      - mongo3      
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_OPTIONS_EDITORTHEME=default
      - ME_CONFIG_MONGODB_SERVER=mongo1
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=example
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin

  nodeapp:
    build: .
    container_name: nodeapp
    working_dir: /app
    volumes:
      - .:/app
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    ports:
      - "3000:3000"
    command: ["nodemon", "src/app.js"]

volumes:
  mongo-data1:
  mongo-data2:
  mongo-data3: